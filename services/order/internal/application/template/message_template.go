package template

import (
	"fmt"

	"github.com/saan/order-service/internal/application/dto"
)

// MessageTemplate defines the interface for message templates
type MessageTemplate interface {
	Generate(data *OrderSummaryData) string
}

// OrderSummaryData contains data for generating order summary messages
type OrderSummaryData struct {
	Order       *dto.OrderResponse
	StockIssues []string
}

// OrderSummaryTemplate implements MessageTemplate for order summaries
type OrderSummaryTemplate struct {
	templateType string
}

// NewOrderSummaryTemplate creates a new order summary template
func NewOrderSummaryTemplate(templateType string) *OrderSummaryTemplate {
	return &OrderSummaryTemplate{
		templateType: templateType,
	}
}

// Generate creates order summary message based on template type
func (t *OrderSummaryTemplate) Generate(data *OrderSummaryData) string {
	switch t.templateType {
	case "cod_delivery":
		return t.generateCODDeliveryTemplate(data)
	case "transfer_pickup":
		return t.generateTransferPickupTemplate(data)
	case "credit_shipping":
		return t.generateCreditShippingTemplate(data)
	default:
		return t.generateFallbackTemplate(data)
	}
}

// generateCODDeliveryTemplate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö COD + ‡∏™‡πà‡∏á‡∏£‡∏ñ‡∏™‡∏≤‡∏¢
func (t *OrderSummaryTemplate) generateCODDeliveryTemplate(data *OrderSummaryData) string {
	order := data.Order
	
	message := fmt.Sprintf(`üõçÔ∏è ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå (‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á + ‡∏™‡πà‡∏á‡∏£‡∏ñ‡∏™‡∏≤‡∏¢)

üÜî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå: %s
üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: %s
üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: %s

üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:`, 
		order.ID.String(),
		order.CustomerID.String(), // ‡πÉ‡∏ô‡∏Å‡∏£‡∏ì‡∏µ‡∏à‡∏£‡∏¥‡∏á‡∏Ñ‡∏ß‡∏£‡∏°‡∏µ‡∏ä‡∏∑‡πà‡∏≠‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤
		order.ShippingAddress)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
	for i, item := range order.Items {
		message += fmt.Sprintf(`
%d. ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ID: %s
   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: %d ‡∏ä‡∏¥‡πâ‡∏ô @ ‡∏ø%.2f = ‡∏ø%.2f`,
			i+1, item.ProductID.String(), item.Quantity, item.UnitPrice, item.TotalPrice)
	}

	message += fmt.Sprintf(`

üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø%.2f
üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ‡πÄ‡∏Å‡πá‡∏ö‡πÄ‡∏á‡∏¥‡∏ô‡∏õ‡∏•‡∏≤‡∏¢‡∏ó‡∏≤‡∏á (COD)
üöõ ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: ‡∏£‡∏ñ‡∏™‡πà‡∏á‡∏™‡∏≤‡∏¢`, order.TotalAmount)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
	if len(data.StockIssues) > 0 {
		message += "\n\n‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å:"
		for _, issue := range data.StockIssues {
			message += "\n‚Ä¢ " + issue
		}
	}

	message += `

‚úÖ ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
‚ùå ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå`

	return message
}

// generateTransferPickupTemplate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô + ‡∏ô‡∏±‡∏î‡∏£‡∏±‡∏ö
func (t *OrderSummaryTemplate) generateTransferPickupTemplate(data *OrderSummaryData) string {
	order := data.Order
	
	message := fmt.Sprintf(`üõçÔ∏è ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå (‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô + ‡∏ô‡∏±‡∏î‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤)

üÜî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå: %s
üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: %s

üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:`, 
		order.ID.String(),
		order.CustomerID.String())

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
	for i, item := range order.Items {
		message += fmt.Sprintf(`
%d. ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ID: %s
   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: %d ‡∏ä‡∏¥‡πâ‡∏ô @ ‡∏ø%.2f = ‡∏ø%.2f`,
			i+1, item.ProductID.String(), item.Quantity, item.UnitPrice, item.TotalPrice)
	}

	message += fmt.Sprintf(`

üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø%.2f
üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏ú‡πà‡∏≤‡∏ô‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£
üè™ ‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ‡∏ô‡∏±‡∏î‡∏£‡∏±‡∏ö‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡∏£‡πâ‡∏≤‡∏ô

üè¶ ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô:
‡∏ò‡∏ô‡∏≤‡∏Ñ‡∏≤‡∏£‡∏Å‡∏™‡∏¥‡∏Å‡∏£‡πÑ‡∏ó‡∏¢
‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: 123-4-56789-0
‡∏ä‡∏∑‡πà‡∏≠‡∏ö‡∏±‡∏ç‡∏ä‡∏µ: ‡∏ö‡∏£‡∏¥‡∏©‡∏±‡∏ó ‡∏™‡∏≤‡∏≠‡∏±‡∏ô ‡∏à‡∏≥‡∏Å‡∏±‡∏î`, order.TotalAmount)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
	if len(data.StockIssues) > 0 {
		message += "\n\n‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å:"
		for _, issue := range data.StockIssues {
			message += "\n‚Ä¢ " + issue
		}
	}

	message += `

‚úÖ ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
‚ùå ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå

üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÇ‡∏≠‡∏ô‡πÄ‡∏á‡∏¥‡∏ô‡∏†‡∏≤‡∏¢‡πÉ‡∏ô 24 ‡∏ä‡∏±‡πà‡∏ß‡πÇ‡∏°‡∏á ‡πÅ‡∏•‡∏∞‡∏™‡πà‡∏á‡∏™‡∏•‡∏¥‡∏õ‡∏°‡∏≤‡πÉ‡∏´‡πâ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö`

	return message
}

// generateCreditShippingTemplate ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï + ‡∏Ç‡∏ô‡∏™‡πà‡∏á
func (t *OrderSummaryTemplate) generateCreditShippingTemplate(data *OrderSummaryData) string {
	order := data.Order
	
	message := fmt.Sprintf(`üõçÔ∏è ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå (‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï + ‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô)

üÜî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå: %s
üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: %s
üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: %s

üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:`, 
		order.ID.String(),
		order.CustomerID.String(),
		order.ShippingAddress)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
	for i, item := range order.Items {
		message += fmt.Sprintf(`
%d. ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ID: %s
   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: %d ‡∏ä‡∏¥‡πâ‡∏ô @ ‡∏ø%.2f = ‡∏ø%.2f`,
			i+1, item.ProductID.String(), item.Quantity, item.UnitPrice, item.TotalPrice)
	}

	shippingFee := order.ShippingFee
	if shippingFee == 0 {
		shippingFee = 50.0 // ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô
	}

	message += fmt.Sprintf(`

üí∞ ‡∏¢‡∏≠‡∏î‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤: ‡∏ø%.2f
üöõ ‡∏Ñ‡πà‡∏≤‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: ‡∏ø%.2f
üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏ó‡∏±‡πâ‡∏á‡∏™‡∏¥‡πâ‡∏ô: ‡∏ø%.2f
üí≥ ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: ‡∏ö‡∏±‡∏ï‡∏£‡πÄ‡∏Ñ‡∏£‡∏î‡∏¥‡∏ï/‡πÄ‡∏î‡∏ö‡∏¥‡∏ï
üì¶ ‡∏à‡∏±‡∏î‡∏™‡πà‡∏á: ‡∏Ç‡∏ô‡∏™‡πà‡∏á‡πÄ‡∏≠‡∏Å‡∏ä‡∏ô (Kerry/Flash)`, 
		order.TotalAmount - shippingFee, shippingFee, order.TotalAmount)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
	if len(data.StockIssues) > 0 {
		message += "\n\n‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å:"
		for _, issue := range data.StockIssues {
			message += "\n‚Ä¢ " + issue
		}
	}

	message += `

‚úÖ ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô
‚ùå ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå

üìù ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏´‡∏ï‡∏∏: ‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏∞‡∏õ‡∏£‡∏∞‡∏°‡∏ß‡∏•‡∏ú‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ó‡∏±‡∏ô‡∏ó‡∏µ ‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô`

	return message
}

// generateFallbackTemplate template ‡∏™‡∏≥‡∏£‡∏≠‡∏á
func (t *OrderSummaryTemplate) generateFallbackTemplate(data *OrderSummaryData) string {
	order := data.Order
	
	message := fmt.Sprintf(`üõçÔ∏è ‡∏™‡∏£‡∏∏‡∏õ‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå

üÜî ‡∏´‡∏°‡∏≤‡∏¢‡πÄ‡∏•‡∏Ç‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå: %s
üë§ ‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤: %s
üìç ‡∏ó‡∏µ‡πà‡∏≠‡∏¢‡∏π‡πà: %s

üì¶ ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤:`, 
		order.ID.String(),
		order.CustomerID.String(),
		order.ShippingAddress)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤
	for i, item := range order.Items {
		message += fmt.Sprintf(`
%d. ‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤ ID: %s
   ‡∏à‡∏≥‡∏ô‡∏ß‡∏ô: %d ‡∏ä‡∏¥‡πâ‡∏ô @ ‡∏ø%.2f = ‡∏ø%.2f`,
			i+1, item.ProductID.String(), item.Quantity, item.UnitPrice, item.TotalPrice)
	}

	message += fmt.Sprintf(`

üí∞ ‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°: ‡∏ø%.2f`, order.TotalAmount)

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
	if order.PaymentMethod != nil {
		message += fmt.Sprintf(`
üí≥ ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ä‡∏≥‡∏£‡∏∞‡πÄ‡∏á‡∏¥‡∏ô: %s`, string(*order.PaymentMethod))
	}

	// ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏õ‡∏±‡∏ç‡∏´‡∏≤‡∏™‡∏ï‡πá‡∏≠‡∏Å‡∏ñ‡πâ‡∏≤‡∏°‡∏µ
	if len(data.StockIssues) > 0 {
		message += "\n\n‚ö†Ô∏è ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏ï‡πá‡∏≠‡∏Å:"
		for _, issue := range data.StockIssues {
			message += "\n‚Ä¢ " + issue
		}
	}

	message += `

‚úÖ ‡∏Å‡∏î‡∏¢‡∏∑‡∏ô‡∏¢‡∏±‡∏ô‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠
‚ùå ‡∏´‡∏£‡∏∑‡∏≠‡∏û‡∏¥‡∏°‡∏û‡πå "‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å" ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏¢‡∏Å‡πÄ‡∏•‡∏¥‡∏Å‡∏≠‡∏≠‡∏£‡πå‡πÄ‡∏î‡∏≠‡∏£‡πå

üìû ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏™‡∏≠‡∏ö‡∏ñ‡∏≤‡∏°: 02-xxx-xxxx`

	return message
}
